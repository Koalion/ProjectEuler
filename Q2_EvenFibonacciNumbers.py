# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

def evenNumbersFibonacciSum(limit) :
    """Function returns the sum of even Fibonacci numbers which are less that the limit"""

    nmin2 = 0
    nmin1 = 1
    n = 1
    sum = 0

    while n < limit :
        n = nmin1 + nmin2
        if n % 2 == 0 :
            sum += n

        nmin2 = nmin1
        nmin1 = n
            
    return sum

print (evenNumbersFibonacciSum(4000000))

#Another approach would be to simply multiply the previous number by golden ratio and round to the nearest integer
#But maybe some other day